class Solution {
public:
    bool isPerfectSquare(int num) {

        int ld=num%10;
        if(ld==2||ld==3||ld==7||ld==9)
        {
            return false;
        }
        int first=1;
        int last=num;
        while(first<=last)
        {
            long long int mid=first+(last-first)/2;
            long long int sqr=mid*mid;
            if(sqr==num)
            {
                return true;
            }
            else if(sqr<num)
            {
                first=mid+1;
            }
            else
            {
                last=mid-1;
            }
        }
        return false;
    }
};

Given a positive integer num, return true if num is a perfect square or false otherwise.

A perfect square is an integer that is the square of an integer. In other words, it is the product of some integer with itself.

You must not use any built-in library function, such as sqrt.

 

Example 1:

Input: num = 16
Output: true
Explanation: We return true because 4 * 4 = 16 and 4 is an integer.
Example 2:

Input: num = 14
Output: false
Explanation: We return false because 3.742 * 3.742 = 14 and 3.742 is not an integer.